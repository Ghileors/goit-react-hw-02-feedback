{"version":3,"sources":["components/Feedback/Feedback.module.css","components/Container/Container.js","components/Feedback/Button.js","components/Feedback/FeedbackOptions.js","components/Feedback/Section.js","components/Feedback/Notification.js","components/Feedback/Statistics.js","App.js","index.js","components/Container/Container.module.css"],"names":["module","exports","Container","children","className","styles","container","Button","nameBtn","onLeaveFeedback","style","button","onClick","type","FeedbackOptions","options","button_container","map","key","Section","title","defaultProps","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","state","handleClickButton","setState","Object","values","this","reduce","acc","stat","Math","round","countTotalFeedback","keys","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,iBAAmB,mCAAmC,OAAS,2B,uLCMtGC,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,yBAAKC,UAAWC,IAAOC,WAAYH,I,gBCgBxBI,EAfA,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACX,4BACIL,UAAWM,IAAMC,OACjBC,QAAS,kBAAMH,EAAgBD,IAC/BK,KAAK,UAEJL,ICYMM,EAjBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASN,EAAZ,EAAYA,gBAAZ,OACpB,yBAAKL,UAAWM,IAAMM,kBACjBD,EAAQE,KAAI,SAAAT,GAAO,OAChB,kBAAC,EAAD,CACIU,IAAKV,EACLA,QAASA,EACTC,gBAAiBA,SCT3BU,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOjB,EAAV,EAAUA,SAAV,OACZ,oCACI,4BAAKiB,GACJjB,IAQTgB,EAAQE,aAAe,CACnBD,MAAO,yBAGID,QCVAG,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,oCACI,2BAAIA,KC0BGC,EAzBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACf,oCACI,0CACCD,EACG,oCACI,oCAAUH,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,kDAAwBC,EAAxB,MAGJ,kBAAC,EAAD,CAAcN,QAAQ,wBCVbO,E,4MACjBC,MAAQ,CACJN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAcTK,kBAAoB,SAAAxB,GAChB,EAAKyB,SAAL,eAAiBzB,EAAU,EAAKuB,MAAMvB,GAAW,K,mEAXjD,OAAO0B,OAAOC,OAAOC,KAAKL,OAAOM,QAAO,SAACC,EAAKC,GAE1C,OADAD,GAAOC,IAER,K,wDAIH,OAAOC,KAAKC,MAAOL,KAAKL,MAAMN,KAAOW,KAAKM,qBAAwB,O,+BAO5D,IAAD,EAC0BN,KAAKL,MAA5BN,EADH,EACGA,KAAME,EADT,EACSA,IAAKD,EADd,EACcA,QACnB,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASN,MAAM,yBACX,kBAAC,EAAD,CACIL,QAASmB,OAAOS,KAAKP,KAAKL,OAC1BtB,gBAAiB2B,KAAKJ,oBAE1B,kBAAC,EAAD,CACIP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOQ,KAAKM,qBACZb,mBAAoBO,KAAKQ,0C,GApChBC,a,YCDjCC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,U,kBCT5BlD,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.e51397fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Feedback_section__2rW_r\",\"button_container\":\"Feedback_button_container__1DTMU\",\"button\":\"Feedback_button__10j46\"};","import React from 'react';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n    <div className={styles.container}>{children}</div>\n);\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './Feedback.module.css';\n\nconst Button = ({ nameBtn, onLeaveFeedback }) => (\n    <button\n        className={style.button}\n        onClick={() => onLeaveFeedback(nameBtn)}\n        type=\"button\"\n    >\n        {nameBtn}\n    </button>\n);\n\nButton.propTypes = {\n    nameBtn: PropTypes.string.isRequired,\n    onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from './Button';\nimport style from './Feedback.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n    <div className={style.button_container}>\n        {options.map(nameBtn => (\n            <Button\n                key={nameBtn}\n                nameBtn={nameBtn}\n                onLeaveFeedback={onLeaveFeedback}\n            />\n        ))}\n    </div>\n);\n\nFeedbackOptions.propTypes = {\n    options: PropTypes.array.isRequired,\n    onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n    <>\n        <h2>{title}</h2>\n        {children}\n    </>\n);\n\nSection.propTypes = {\n    title: PropTypes.string,\n};\n\nSection.defaultProps = {\n    title: 'Awesome Section Title',\n};\n\nexport default Section;\n","import React from 'react';\n\nconst Notification = ({ message }) => (\n    <>\n        <p>{message}</p>\n    </>\n);\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Notification from './Notification';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n    <>\n        <h2>Statistics</h2>\n        {total ? (\n            <>\n                <p>Good: {good}</p>\n                <p>Neutral: {neutral}</p>\n                <p>Bad: {bad}</p>\n                <p>Total: {total}</p>\n                <p>Positive feedbacks: {positivePercentage}%</p>\n            </>\n        ) : (\n            <Notification message=\"No feedback given\" />\n        )}\n    </>\n);\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\n\nimport Container from './components/Container';\nimport FeedbackOptions from './components/Feedback/FeedbackOptions';\nimport Section from './components/Feedback/Section';\nimport Statistics from './components/Feedback/Statistics';\n\nexport default class App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n\n    countTotalFeedback() {\n        return Object.values(this.state).reduce((acc, stat) => {\n            acc += stat;\n            return acc;\n        }, 0);\n    }\n\n    countPositiveFeedbackPercentage() {\n        return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n    }\n\n    handleClickButton = nameBtn => {\n        this.setState({ [nameBtn]: this.state[nameBtn] + 1 });\n    };\n\n    render() {\n        const { good, bad, neutral } = this.state;\n        return (\n            <Container>\n                <Section title=\"Please leave feedback\">\n                    <FeedbackOptions\n                        options={Object.keys(this.state)}\n                        onLeaveFeedback={this.handleClickButton}\n                    />\n                    <Statistics\n                        good={good}\n                        neutral={neutral}\n                        bad={bad}\n                        total={this.countTotalFeedback()}\n                        positivePercentage={this.countPositiveFeedbackPercentage()}\n                    />\n                </Section>\n            </Container>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__Ls5He\"};"],"sourceRoot":""}